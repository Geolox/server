{"version":3,"sources":["../../../server/config/seed.js"],"names":[],"mappings":";;;;;AAKA,YAAY,CAAC;;;;;gCAEI,wBAAwB;;;;wCACpB,gCAAgC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoCrD,8BAAK,IAAI,CAAC,EAAE,CAAC,CAAC,WAAW,EAAE,CACxB,IAAI,CAAC,YAAM;AACV,gCAAK,WAAW,CAAC;AACf,YAAQ,EAAE,OAAO;AACjB,QAAI,EAAE,WAAW;AACjB,SAAK,EAAE,kBAAkB;AACzB,YAAQ,EAAE,MAAM;GACjB,EAAE;AACD,YAAQ,EAAE,OAAO;AACjB,QAAI,EAAE,OAAO;AACb,QAAI,EAAE,OAAO;AACb,SAAK,EAAE,mBAAmB;AAC1B,YAAQ,EAAE,OAAO;GAClB,CAAC,CACD,IAAI,CAAC,YAAM;AACV,WAAO,CAAC,GAAG,CAAC,2BAA2B,CAAC,CAAC;GAC1C,CAAC,CAAC;CACJ,CAAC,CAAC;AACL,sCAAS,IAAI,CAAC,EAAE,CAAC,CAAC,WAAW,EAAE,CAC5B,IAAI,CAAC,YAAM;AACV,wCAAS,WAAW,CAAC;AACnB,QAAI,EAAE,YAAY;AAClB,cAAU,EAAE,MAAM;GACnB,EAAE;AACD,QAAI,EAAE,YAAY;AAClB,cAAU,EAAE,MAAM;GACnB,CAAC,CACD,IAAI,CAAC,YAAM;AACV,WAAO,CAAC,GAAG,CAAC,gCAAgC,CAAC,CAAC;GAC/C,CAAC,CAAC;CACJ,CAAC,CAAC","file":"seed.js","sourcesContent":["/**\n * Populate DB with sample data on server start\n * to disable, edit config/environment/index.js, and set `seedDB: false`\n */\n\n'use strict';\n//import Thing from '../api/thing/thing.model';\nimport User from '../api/user/user.model';\nimport Category from '../api/category/category.model';\n\n/*\nThing.find({}).removeAsync()\n  .then(() => {\n    Thing.create({\n      name: 'Development Tools',\n      info: 'Integration with popular tools such as Bower, Grunt, Babel, Karma, ' +\n             'Mocha, JSHint, Node Inspector, Livereload, Protractor, Jade, ' +\n             'Stylus, Sass, and Less.'\n    }, {\n      name: 'Server and Client integration',\n      info: 'Built with a powerful and fun stack: MongoDB, Express, ' +\n             'AngularJS, and Node.'\n    }, {\n      name: 'Smart Build System',\n      info: 'Build system ignores `spec` files, allowing you to keep ' +\n             'tests alongside code. Automatic injection of scripts and ' +\n             'styles into your index.html'\n    }, {\n      name: 'Modular Structure',\n      info: 'Best practice client and server structures allow for more ' +\n             'code reusability and maximum scalability'\n    }, {\n      name: 'Optimized Build',\n      info: 'Build process packs up your templates as a single JavaScript ' +\n             'payload, minifies your scripts/css/images, and rewrites asset ' +\n             'names for caching.'\n    }, {\n      name: 'Deployment Ready',\n      info: 'Easily deploy your app to Heroku or Openshift with the heroku ' +\n             'and openshift subgenerators'\n    });\n  });\n*/\n\nUser.find({}).removeAsync()\n  .then(() => {\n    User.createAsync({\n      provider: 'local',\n      name: 'Test User',\n      email: 'test@example.com',\n      password: 'test'\n    }, {\n      provider: 'local',\n      role: 'admin',\n      name: 'Admin',\n      email: 'admin@example.com',\n      password: 'admin'\n    })\n    .then(() => {\n      console.log('finished populating users');\n    });\n  });\nCategory.find({}).removeAsync()\n  .then(() => {\n    Category.createAsync({\n      name: \"Category 1\",\n      short_name: \"cat1\"\n    }, {\n      name: \"Category 2\",\n      short_name: \"cat2\"\n    })\n    .then(() => {\n      console.log('finished populating categories');\n    });\n  });\n"]}